#BlueJ class context
comment0.target=Sokoban
comment0.text=\n\ A\ Sokoban\ puzzle.\n\n\ @author\ Dr\ Mark\ C.\ Sinclair\n\ @author\ Dr\ Kelechi\ Berquist\n\ @version\ September\ 2021\n
comment1.params=file
comment1.target=Sokoban(java.io.File)
comment1.text=\n\ Construct\ a\ Sokoban\ puzzle\ from\ a\ standard\ Sokoban\ screen\ file\n\n\ @param\ file\ the\ file\n
comment10.params=
comment10.target=int\ numBoxes()
comment10.text=\n\ Count\ the\ number\ of\ boxes\ in\ the\ Sokoban\ puzzle\n\n\ @return\ the\ number\ of\ boxes\n
comment11.params=
comment11.target=int\ numActors()
comment11.text=\n\ Count\ the\ number\ of\ actors\ in\ the\ Sokoban\ puzzle\ (should\ be\ one)\n\n\ @return\ the\ number\ of\ actors\n
comment12.params=
comment12.target=int\ numOnTarget()
comment12.text=\n\ Count\ the\ number\ of\ boxes\ on\ target\ cells\ in\ the\ Sokoban\ puzzle\n\n\ @return\ the\ number\ of\ boxes\ on\ target\ cells\n
comment13.params=
comment13.target=boolean\ onTarget()
comment13.text=\n\ Are\ all\ the\ boxes\ on\ target\ in\ the\ Sokoban\ puzzle?\n\n\ @return\ are\ all\ the\ boxes\ on\ target?\n
comment14.params=dir
comment14.target=boolean\ canMove(Direction)
comment14.text=\n\ Checks\ if\ the\ actor\ can\ move\ to\ the\ next\ cell\ in\ a\ given\ direction\n\n\ @param\ dir\ the\ direction\ to\ check\n\ @return\ can\ the\ actor\ move\ to\ the\ next\ cell\ in\ a\ given\ direction?\n
comment15.params=
comment15.target=java.util.Vector\ canMove()
comment15.text=\n\ In\ which\ directions\ can\ the\ actor\ move?\n\n\ @return\ a\ vector\ of\ available\ directions\n
comment16.params=dir
comment16.target=void\ move(Direction)
comment16.text=\n\ If\ it\ is\ safe,\ move\ the\ actor\ to\ the\ next\ cell\ in\ a\ given\ direction\n\n\ @param\ dir\ the\ direction\ to\ move\n
comment17.params=
comment17.target=java.lang.String\ toString()
comment17.text=\n\ A\ String\ representation\ of\ the\ Sokoban\ puzzle\n\n\ @return\ the\ String\ representation\n
comment18.params=c
comment18.target=boolean\ validDisplay(char)
comment18.text=\n\ Check\ if\ this\ is\ a\ valid\ display\ character\ for\ a\ Sokoban\ puzzle?\n\n\ @param\ c\ the\ character\ to\ check\n\ @param\ is\ this\ a\ valid\ display\ character?\n
comment19.params=file
comment19.target=java.lang.String\ fileAsString(java.io.File)
comment19.text=\n\ Convert\ a\ file\ into\ a\ String\n\n\ @param\ file\ the\ file\n\ @return\ the\ file\ as\ a\ string\n
comment2.params=screen
comment2.target=Sokoban(java.lang.String)
comment2.text=\n\ Construct\ a\ Sokoban\ puzzle\ from\ a\ standard\ Sokoban\ screen\ file\ passed\ as\ a\ String\n\n\ @param\ screen\ the\ screen\ file\ as\ a\ String\n
comment20.params=s
comment20.target=void\ trace(java.lang.String)
comment20.text=\n\ A\ trace\ method\ for\ debugging\ (active\ when\ traceOn\ is\ true)\n\n\ @param\ s\ the\ string\ to\ output\n
comment3.params=
comment3.target=void\ checkValid()
comment3.text=\n\ Some\ basic\ validity\ checks\n
comment4.params=
comment4.target=void\ clear()
comment4.text=\n\ Reset\ to\ the\ starting\ state\n
comment5.params=
comment5.target=int\ getNumRows()
comment5.text=\n\ Gets\ the\ number\ of\ cell\ rows\n\n\ @return\ the\ number\ of\ cell\ rows\n
comment6.params=
comment6.target=int\ getNumCols()
comment6.text=\n\ Gets\ the\ number\ of\ cell\ columns\n\n\ @return\ the\ number\ of\ cell\ columns\n
comment7.params=row\ col
comment7.target=Cell\ getCell(int,\ int)
comment7.text=\n\ Get\ a\ cell\ from\ the\ Sokoban\ puzzle\n\n\ @param\ row\ row\ number\ (starts\ from\ 0)\n\ @param\ col\ column\ number\ (starts\ from\ 0)\n\ @return\ the\ requested\ cell\n
comment8.params=
comment8.target=Cell\ getActorCell()
comment8.text=\n\ Get\ the\ actor\ cell\ from\ the\ Sokoban\ puzzle\n\n\ @return\ the\ requested\ cell\n
comment9.params=
comment9.target=int\ numTargets()
comment9.text=\n\ Count\ the\ number\ of\ targets\ in\ the\ Sokoban\ puzzle\n\n\ @return\ the\ number\ of\ targets\n
numComments=21
